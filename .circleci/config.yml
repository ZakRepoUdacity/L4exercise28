version: 2.1
# Use a package of configuration called an orb.

# orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

# 25 Exercise
commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            # aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID}

jobs:

# 16 Exercise
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              # aws cloudformation deploy \
              #   --template-file template.yml \
              #   --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
              #   --region us-east-1
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID} \
                --region us-east-1

# 19 Exercise: Config and Deployment
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #             # You can get this ID in the section where you registered the SSH Key
  #             fingerprints: ["11:53:17:01:57:4c:ec:06:6c:e5:27:10:4f:37:ef:ae"] 
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           # Install Ansible
  #           apk add --update ansible
  #     - run:
  #         name: Run Playbook and Configure server
  #         command: |
  #           # Your command
  #           ansible-playbook main.yml -i inventory.txt 
# 22 Exercise
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           #URL="https://blog.udacity.com/"
  #           URL="Zakarya.Asaad.Rasmy"
  #           # Test if website exists
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi

# 25 Exercise
# Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment
          # when: on_fail Already exist in the commands sectoin





workflows:
  # Name the workflow
  MyWorkflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
          # requires: [create_infrastructure]
      - smoke_test:
          requires: [create_infrastructure]
